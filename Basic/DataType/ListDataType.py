a = [1, 2, 3, 4, 5, 6]
a[0] # 1
a = list() # 빈 리스트 선언 방법 1
a = [] # 빈 리스트 선언 방법 2

# * 연산자로 크기가 N이고 값이 0 인 1차원 리스트 생성
n = 5
a = [0] * n # [0, 0, 0, 0, 0]

# 리스트 인덱싱
a = [1, 2, 3, 4, 5, 6]

# 뒤에서 첫 번째 원소 출력
print(a[-1]) # 6

# 뒤에서 세 번째 원소 출력
print(a[-3]) # 4

# 두 번째 원소 값 변경
a[1] = 10 # [1, 10, 3, 4, 5, 6]

# 리스트 슬라이싱
a = [1, 2, 3, 4, 5, 6]

# a : b -> a ~ b-1 인덱스 데이터 슬라이싱
print(a[1 : 3]) # [2,3]
print(a[1 : -1]) # [2, 3, 4, 5]

# a : b : step
print(a[::2]) # [1, 3, 5]
print(a[::-1]) # reverse [6, 5, 4, 3, 2, 1]

# 리스트 컴프리헨션
# 0~19 사이에 있는 짝수의 배열
array = [i for i in range(20) if i % 2 == 0]
print(array) # [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]


# NxM 크기의 2차원 리스트 생성
n = 4
m = 3
arr2d = [[0] * n for _ in range(m)]
print(arr2d) # [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

# 리스트 메서드

# append(): 한 개 원소 추가
a = [1, 2, 3, 4, 5, 6]

a.append(7)
print(a) # [1, 2, 3, 4, 5, 6, 7]

a.append([1, 3])
print(a) # [1, 2, 3, 4, 5, 6, 7, [1, 3]]

# extend(): 여러 개 원소 추가
a = [1, 2, 3, 4, 5, 6]
a.extend([7, 8, 9])
print(a) # [1, 2, 3, 4, 5, 6, 7, 8, 9]

# pop(index) : 요소 꺼내기
a = [1, 2, 3, 4, 5, 6]

a.pop() # 6
print(a) # [1, 2, 3, 4, 5]

a.pop(0) # 1
print(a) # [2, 3, 4, 5]

#index(value) : value 의 index 값 반환, value 가 여러개 일 경우 가장 작은 index 출력
a = [1, 2, 3, 2, 1]
print(a.index(2)) # 1

